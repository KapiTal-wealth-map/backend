// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  name         String
  password     String
  role         String
  companyId    String
  mfaSecret    String?
  mfaEnabled   Boolean  @default(false)
  status       String   @default("invited")
  lastLogin    DateTime?
  notificationPreferences Json @default("{\"email\": true, \"inApp\": true}")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  company      Company  @relation(fields: [companyId], references: [id])
  auditLogs    AuditLog[]
}

model Company {
  id        String  @id @default(uuid())
  name      String
  logo      String?
  dataAccessSettings  Json?    @default("{\"allowPublicProfileViewing\":false,\"allowEmployeeDataExport\":false,\"allowEmployeePropertySearch\":true,\"restrictSensitiveData\":true}")
  users     User[]
  invites  Invite[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuditLog {
  id          String   @id @default(uuid())
  userId      String
  actionType  String
  description String
  ipAddress   String
  userAgent   String
  timestamp   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id])
}

model Invite {
  id          String   @id @default(cuid())
  email       String
  role        String 
  status      String   @default("pending")
  token       String   @unique
  expiresAt   DateTime
  used        Boolean  @default(false)
  companyId   String
  createdAt   DateTime @default(now())

  company     Company  @relation(fields: [companyId], references: [id])
}

model Property {
  id        String   @id @default(cuid())
  address   String
  city      String
  state     String   @default("CA")
  zip       String
  lat       Float
  lng       Float
  price     Float?
  estimatedValue  Float?
  beds           Int?
  baths          Float?
  sizeSqFt       Int?
  medianIncome   Int?
  population     Int?
  density        Int?
  county         String?
  createdAt DateTime @default(now())
}
